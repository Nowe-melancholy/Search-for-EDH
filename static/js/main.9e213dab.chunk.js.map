{"version":3,"sources":["Main/GetCardList.js","Main/ShowCardInfo/CreateCardLayout.js","Main/ShowCardInfo/normal/ShowNormalCardInfo.js","Main/ShowCardInfo/split/ShowSplitCardInfo.js","Main/ShowCardInfo/doubleFaces/ShowDoubleFacesCardInfo.js","Main/ShowCardInfo/ShowCardInfo.js","Main/InputSearchConditions/InputSearchConditions.js","Main/Main.js","Header.js","App.js","index.js"],"names":["API","compareCMC","a","b","cmc","GetCardList","searchConditions","setCardList","setResultCount","cardList","oracleIdSet","Set","resultCount","SearchURL","cardName","idColor","cardType","forEach","fetch","then","res","json","data","Object","keys","map","key","total_cards","cardInfo","add","oracle_id","has","push","sort","CardName","edhRecLink","type_line","match","oracle_text","name","replace","toLowerCase","printed_name","wikiURL","href","target","rel","style","fontSize","CardText","printed_text","cardText","CreateCardLayout","className","color_identity","ShowNormalCardInfo","image","image_uris","CreateNormalCardLayout","src","small","ShowSplitCardInfo","ref1","ref2","cardLayout","card_faces","ref","textAlign","id","type","onClick","e","current","scrollIntoView","behavior","block","inline","display","ShowDoubleFacesCardInfo","image1","image2","classList","contains","remove","height","clientHeight","ShowCardInfo","index","layout","InputSearchConditions","props","value","searchWord","onChange","handleCardNameChange","handleIdColorChange","handleCardTypeChange","ShowCardList","React","forwardRef","Main","useState","setSearchConditions","timeoutId","setTimeoutId","elsRef","useRef","Array","fill","createRef","useEffect","clearTimeout","setTimeout","checked","toString","filter","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e213dab.chunk.js","sourcesContent":["const API = 'https://api.scryfall.com/cards/search?order=cmc&q='\r\n\r\nconst GetCardList = (searchConditions, setCardList, setResultCount) => {\r\n  let cardList = [];\r\n  let oracleIdSet = new Set();\r\n  let resultCount = 0\r\n\r\n  let SearchURL = API\r\n\r\n  if (searchConditions.cardName) SearchURL += ('+name:' + searchConditions.cardName);\r\n  if (searchConditions.idColor) SearchURL += ('+id>=' + searchConditions.idColor);\r\n  if (searchConditions.cardType) searchConditions.cardType.forEach((cardType) => { SearchURL += (' t:' + cardType); })\r\n\r\n\r\n  if (SearchURL === API) {\r\n    setCardList(cardList)\r\n    setResultCount(0)\r\n    return\r\n  }\r\n\r\n  //日本語のリストを先に取得\r\n  fetch(SearchURL + '+lang:ja')\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      if (json.data) {\r\n        cardList = Object.keys(json.data).map(function (key) { return json.data[key] })\r\n        resultCount = json.total_cards\r\n      }\r\n      cardList.forEach(cardInfo => oracleIdSet.add(cardInfo.oracle_id))\r\n    })\r\n    .then(() => {\r\n\r\n      //英語のリストを取得し日本語のリストに追加\r\n      fetch(SearchURL)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          if (json.total_cards) resultCount = json.total_cards\r\n          return json.data\r\n        })\r\n        .then(data => {\r\n          if (data) data.forEach(\r\n            cardInfo => {\r\n              if (!oracleIdSet.has(cardInfo.oracle_id)) cardList.push(cardInfo)\r\n            })\r\n        })\r\n        .then(() => {\r\n          setCardList(cardList.sort(compareCMC))\r\n          setResultCount(resultCount)\r\n        })\r\n    })\r\n}\r\n\r\nconst compareCMC = (a, b) => {\r\n  return a.cmc < b.cmc ? -1 : 1;\r\n}\r\n\r\n\r\nexport default GetCardList;","import './CardLayoutContainer.css'\r\n\r\nconst CreateCardLayout = (cardInfo) => {\r\n    return(\r\n      <div className=\"cardContainer\">\r\n        <div className=\"item_title\">カード名</div><div className=\"card_item\">{CardName(cardInfo)}</div>\r\n        <div className=\"item_title\">固有色</div><div className=\"card_item\">{cardInfo.color_identity}</div>\r\n        <div className=\"item_title\">テキスト</div><div className=\"card_item\">{CardText(cardInfo)}</div>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst CardName = (cardInfo) => {\r\n\r\n    let edhRecLink = \"\"\r\n    if((cardInfo.type_line.match(\"Legendary\") && cardInfo.type_line.match(\"Creature\")) || cardInfo.oracle_text.match(\"can be your commander\")){\r\n        edhRecLink = \"https://edhrec.com/commanders/\" + cardInfo.name.replace(/, /g, \"-\").replace(/ /g, \"-\").toLowerCase()\r\n    }\r\n    \r\n    if(cardInfo.printed_name){\r\n        let wikiURL = \"http://mtgwiki.com/wiki/\" + cardInfo.printed_name + \"/\" + cardInfo.name\r\n        if(edhRecLink){\r\n            return(\r\n                <div>\r\n                    <div><a href={wikiURL} target=\"_blank\" rel=\"noopener noreferrer\">{cardInfo.printed_name} // {cardInfo.name}</a></div>\r\n                    <div><a href={edhRecLink} style={{fontSize: 13}} target=\"_blank\" rel=\"noopener noreferrer\">EDHREC</a></div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return <div><a href={wikiURL} target=\"_blank\" rel=\"noopener noreferrer\">{cardInfo.printed_name} // {cardInfo.name}</a></div>\r\n        }\r\n        \r\n    }else{\r\n        let wikiURL = \"http://mtgwiki.com/wiki/\" + cardInfo.name\r\n        if(edhRecLink){\r\n            return(\r\n                <div>\r\n                    <div><a href={wikiURL} target=\"_blank\" rel=\"noopener noreferrer\">{cardInfo.name}</a></div>\r\n                    <div><a href={edhRecLink} style={{fontSize: 13}} target=\"_blank\" rel=\"noopener noreferrer\">EDHREC</a></div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return <div><a href={wikiURL} target=\"_blank\" rel=\"noopener noreferrer\">{cardInfo.name}</a></div>\r\n        }\r\n    }\r\n}\r\n\r\nconst CardText = (cardInfo) => {\r\n    if(cardInfo.printed_text){\r\n        const cardText = cardInfo.printed_text\r\n        return <div>{cardText}</div>\r\n    } else {\r\n        const cardText = cardInfo.oracle_text\r\n        return <div>{cardText}</div>\r\n    }\r\n}\r\n\r\nexport default CreateCardLayout;","import '../ShowCardInfo.css';\r\nimport CreateNormalCardLayout from '../CreateCardLayout'\r\n\r\nconst ShowNormalCardInfo = (cardInfo) => {\r\n    const image = cardInfo.image_uris\r\n    return(\r\n        <div className=\"searchResultContainer\">\r\n            {CreateNormalCardLayout(cardInfo)}\r\n            <div className=\"cardImage\"><img src={image.small}></img></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowNormalCardInfo;","import CreateCardLayout from '../CreateCardLayout'\r\nimport './ShowSplitContainer.css';\r\n\r\nconst ShowSplitCardInfo = (cardInfo, ref1, ref2) => {\r\n  const image = cardInfo.image_uris\r\n  const cardLayout = cardInfo.card_faces.map(CreateCardLayout)\r\n\r\n  const handleClickLeft = (e) => {\r\n    ref1.current.scrollIntoView(\r\n      {\r\n        behavior: 'smooth',\r\n        block:\"nearest\",  \r\n        inline:\"nearest\",\r\n      }\r\n    )\r\n  }\r\n\r\n  const handleClickRight = (e) => {\r\n    ref2.current.scrollIntoView(\r\n      {\r\n        behavior: 'smooth',\r\n        block:\"nearest\",  \r\n        inline:\"nearest\",\r\n      }\r\n    )\r\n  }\r\n\r\n  return(\r\n    <div className=\"searchResultContainer\">\r\n      <div className=\"splitContainer\">\r\n        <div>\r\n          <div className=\"splitCardLayout\" ref={ref1}>\r\n            {cardLayout[0]}\r\n          </div>\r\n          <div style={{textAlign:\"center\"}}>\r\n            <button id = \"scrollRight\" type = \"button\" onClick = {handleClickRight} style={{display:\"inline-block\"}}>  \r\n              <font style={{fontSize:\"30px\"}}>▶︎</font>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"splitCardLayout\" ref={ref2}>\r\n            {cardLayout[1]}\r\n          </div>\r\n          <div style={{textAlign:\"center\"}}>\r\n            <button id = \"scrollLeft\" type = \"button\" onClick = {handleClickLeft} style={{display:\"inline-block\"}}>  \r\n              <font style={{fontSize:\"30px\"}}>◀</font>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"cardImage\"><img src={image.small}></img></div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n  \r\nexport default ShowSplitCardInfo;","import CreateCardLayout from '../CreateCardLayout'\r\nimport './ShowDoubleFacesCardInfo.css';\r\n\r\nconst ShowDoubleFacesCardInfo = (cardInfo, ref1, ref2) => {\r\n  const image1 = cardInfo.card_faces[0].image_uris\r\n  const image2 = cardInfo.card_faces[1].image_uris\r\n  const cardLayout = cardInfo.card_faces.map(CreateCardLayout)\r\n\r\n  const handleClickRotate = () => {\r\n    if(ref1.current.classList.contains('is-front')){\r\n      ref1.current.classList.remove('is-front')\r\n      ref1.current.classList.add('is-back')\r\n\r\n      ref1.current.style.height = ref2.current.clientHeight + \"px\"\r\n    } else {\r\n      ref1.current.classList.remove('is-back')\r\n      ref1.current.classList.add('is-front')\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  return(\r\n    <div className=\"searchResultContainer\">\r\n      <div>\r\n        <div className=\"wrap is-front\" ref={ref1}>\r\n          <div className=\"card_front\">\r\n            <div className=\"doubleFacesContainer\">\r\n              {cardLayout[0]}\r\n              <div className=\"cardImage\"><img src={image1.small}></img></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card_back\" ref={ref2}>\r\n            <div className=\"doubleFacesContainer\">\r\n              {cardLayout[1]}\r\n              <div className=\"cardImage\"><img src={image2.small}></img></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <button id = \"rotate\" type = \"button\" className=\"rotateButton\" onClick = {handleClickRotate}>  \r\n            回転\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n  \r\nexport default ShowDoubleFacesCardInfo;","import ShowNormalCardInfo from './normal/ShowNormalCardInfo';\r\nimport ShowSplitCardInfo from './split/ShowSplitCardInfo';\r\nimport ShowDoubleFacesCardInfo from './doubleFaces/ShowDoubleFacesCardInfo';\r\n\r\nimport './ShowCardInfo.css';\r\n\r\nconst ShowCardInfo = (cardInfo, ref, index) => {\r\n  if(cardInfo.layout === 'normal'){\r\n    return(\r\n      <div>\r\n        {ShowNormalCardInfo(cardInfo)}\r\n      </div>\r\n    )\r\n  }else if(cardInfo.layout === 'transform' || cardInfo.layout === 'modal_dfc'){\r\n    return(\r\n      <div>\r\n        {ShowDoubleFacesCardInfo(cardInfo, ref.current[index*2], ref.current[index*2+1])}\r\n      </div>\r\n    )\r\n  } else if(cardInfo.layout === 'split'){\r\n    return(\r\n      <div>\r\n        {ShowSplitCardInfo(cardInfo, ref.current[index*2], ref.current[index*2+1])}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ShowCardInfo;","import './SearchContainer.css'\r\n\r\nconst InputSearchConditions = (props) => {\r\n  return (\r\n    <div className=\"searchContainer\">\r\n      <div className=\"search_title\">カード名</div>\r\n      <div className=\"search_item\"><input type=\"search\" value={props.searchWord} onChange={e => props.handleCardNameChange(e)} /></div>\r\n\r\n      <div className=\"search_title\">固有色</div>\r\n      <div className=\"search_item\">\r\n        <input type=\"checkbox\" name=\"idColor\" value=\"W\" onChange={e => props.handleIdColorChange(e)}></input>白\r\n        <input type=\"checkbox\" name=\"idColor\" value=\"U\" onChange={e => props.handleIdColorChange(e)}></input>青\r\n        <input type=\"checkbox\" name=\"idColor\" value=\"B\" onChange={e => props.handleIdColorChange(e)}></input>黒\r\n        <input type=\"checkbox\" name=\"idColor\" value=\"R\" onChange={e => props.handleIdColorChange(e)}></input>赤\r\n        <input type=\"checkbox\" name=\"idColor\" value=\"G\" onChange={e => props.handleIdColorChange(e)}></input>緑\r\n        <input type=\"checkbox\" name=\"idColor\" value=\"C\" onChange={e => props.handleIdColorChange(e)}></input>無色\r\n      </div>\r\n\r\n      <div className=\"search_title\">カードタイプ</div>\r\n      <div className=\"search_item\">\r\n        <input type=\"checkbox\" name=\"cardType\" value=\"creature\" onChange={e => props.handleCardTypeChange(e)}></input>クリーチャー\r\n        <input type=\"checkbox\" name=\"cardType\" value=\"artifact\" onChange={e => props.handleCardTypeChange(e)}></input>アーティファクト\r\n        <input type=\"checkbox\" name=\"cardType\" value=\"sorcery\" onChange={e => props.handleCardTypeChange(e)}></input>ソーサリー\r\n        <input type=\"checkbox\" name=\"cardType\" value=\"instant\" onChange={e => props.handleCardTypeChange(e)}></input>インスタント\r\n        <input type=\"checkbox\" name=\"cardType\" value=\"enchant\" onChange={e => props.handleCardTypeChange(e)}></input>エンチャント\r\n        <input type=\"checkbox\" name=\"cardType\" value=\"planeswalker\" onChange={e => props.handleCardTypeChange(e)}></input>プレインズウォーカー\r\n        <input type=\"checkbox\" name=\"cardType\" value=\"land\" onChange={e => props.handleCardTypeChange(e)}></input>土地\r\n        <input type=\"checkbox\" name=\"cardType\" value=\"legendary\" onChange={e => props.handleCardTypeChange(e)}></input>伝説\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default InputSearchConditions;","import React, { useState, useEffect, useRef } from 'react';\r\nimport GetCardList from './GetCardList'\r\nimport ShowCardInfo from './ShowCardInfo/ShowCardInfo'\r\nimport InputSearchConditions from './InputSearchConditions/InputSearchConditions'\r\n\r\nfunction Main() {\r\n  const [cardList, setCardList] = useState([])\r\n  const [searchConditions, setSearchConditions] = useState({})\r\n  const [resultCount, setResultCount] = useState(0)\r\n  const [timeoutId, setTimeoutId] = useState(0)\r\n  const elsRef = useRef(Array(400).fill().map(e => React.createRef()))\r\n\r\n  useEffect(() => {\r\n    clearTimeout(timeoutId)\r\n    setTimeoutId(setTimeout(() => {\r\n      GetCardList(searchConditions, setCardList, setResultCount)\r\n    }, 800)\r\n    )\r\n  }, [searchConditions])\r\n\r\n  const handleCardNameChange = (e) => {\r\n    setSearchConditions({ ...searchConditions, \"cardName\": e.target.value })\r\n  }\r\n\r\n  const handleIdColorChange = (e) => {\r\n    let idColor = searchConditions.idColor || \"\";\r\n    if (e.target.checked) idColor += e.target.value\r\n    else idColor = idColor.toString().replace(e.target.value, \"\")\r\n    setSearchConditions({ ...searchConditions, \"idColor\": idColor })\r\n  }\r\n\r\n  const handleCardTypeChange = (e) => {\r\n    let cardType = searchConditions.cardType || [];\r\n    if (e.target.checked) cardType.push(e.target.value)\r\n    else cardType = cardType.filter(value => value !== e.target.value)\r\n    setSearchConditions({ ...searchConditions, \"cardType\": cardType })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <InputSearchConditions searchWord={searchConditions.cardName}\r\n        handleCardNameChange={e => handleCardNameChange(e)}\r\n        handleIdColorChange={e => handleIdColorChange(e)}\r\n        handleCardTypeChange={e => handleCardTypeChange(e)}\r\n      />\r\n      <div>検索結果：{resultCount}件</div>\r\n      <div>\r\n        <ShowCardList cardList={cardList} ref={elsRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ShowCardList = React.forwardRef((props, ref) => {\r\n  return (\r\n    props.cardList.map((value, index) => ShowCardInfo(value, ref, index))\r\n  )\r\n})\r\n\r\nexport default Main;","import React from 'react';\r\nimport './Header.css'\r\n\r\nfunction Header(){\r\n    return(\r\n        <h1>EDH用検索ツール</h1>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport './App.css'\nimport Main from \"./Main/Main\";\nimport Header from \"./Header\";\n\nconst API = 'https://api.scryfall.com/cards/search?q=lang:ja+name='\n\nfunction App(){\n  return(\n    <div className=\"container\">\n      <div className=\"header\"><Header /></div>\n      <div className=\"main\"><Main /></div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App.js\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}