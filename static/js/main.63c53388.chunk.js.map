{"version":3,"sources":["Main/GetCardList.js","Main/Main.js","Header.js","App.js","index.js"],"names":["API","GetCardList","searchCondition","Promise","resolve","cardList","oracleIdSet","Set","fetch","cardName","then","res","json","data","Object","keys","map","key","forEach","cardInfo","add","oracle_id","has","push","InputSearchConditions","props","type","value","searchWord","onChange","e","handleChange","CreateCardLayout","className","printed_name","name","color_identity","printed_text","Main","useState","setCardList","searchConditions","setSearchConditions","useEffect","timeoutId","setTimeout","layout","image","image_uris","id","src","small","card_faces","ShowCardInfo","clearTimeout","target","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63c53388.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst API = 'https://api.scryfall.com/cards/search?q=name:'\r\n\r\nconst GetCardList = (searchCondition) => {\r\n    return new Promise(function(resolve){\r\n      let cardList = [];\r\n      let oracleIdSet = new Set();\r\n\r\n      //日本語のリストを先に取得\r\n      fetch(API + searchCondition.cardName + '+lang:ja')\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        if(json.data) cardList = Object.keys(json.data).map(function (key) {return json.data[key]});\r\n        cardList.forEach(cardInfo => oracleIdSet.add(cardInfo.oracle_id))\r\n      })\r\n      .then(() => {\r\n\r\n        //英語のリストを取得し日本語のリストに追加\r\n        fetch(API + searchCondition.cardName)\r\n        .then(res => res.json())\r\n        .then(json => json.data)\r\n        .then(data => {\r\n          if(data) data.forEach(\r\n            cardInfo => {\r\n              if(!oracleIdSet.has(cardInfo.oracle_id)) cardList.push(cardInfo)\r\n            })\r\n        })\r\n        .then(() => resolve(cardList) )\r\n      })\r\n    })\r\n}\r\n\r\n\r\nexport default GetCardList;","import './Main.css';\r\nimport React, { useState,useEffect } from 'react';\r\nimport GetCardList from './GetCardList'\r\n\r\nfunction Main(){\r\n  const[cardList, setCardList] = useState([]);\r\n  const[searchConditions, setSearchConditions] = useState({})\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      GetCardList(searchConditions)\r\n      .then(cardList => {\r\n        cardList ? setCardList(cardList.map(cardInfo => ShowCardInfo(cardInfo))) : setCardList([])\r\n      })\r\n    }, 500);\r\n    return () => {\r\n      clearTimeout(timeoutId)\r\n    }\r\n  },[searchConditions])\r\n\r\n  function handleChange(e){\r\n    setSearchConditions({...searchConditions, \"cardName\":e.target.value})\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <InputSearchConditions searchWord={searchConditions.cardName} handleChange={e => handleChange(e)} />\r\n      <div>\r\n        {cardList}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst InputSearchConditions = (props) => {\r\n  return(\r\n    <div>カード名　<input type=\"search\" value={props.searchWord} onChange={e => props.handleChange(e)} /></div>\r\n  )\r\n}\r\n\r\nfunction ShowCardInfo(cardInfo){\r\n  if(cardInfo.layout === 'normal'){\r\n    const image = cardInfo.image_uris ? cardInfo.image_uris : {}\r\n    return(\r\n      <div className=\"searchResultContainer\">\r\n        {CreateCardLayout(cardInfo)}\r\n        <div id=\"cardImage\"><img src={image.small}></img></div>\r\n      </div>\r\n    )\r\n  }else if(cardInfo.layout === 'transform' || cardInfo.layout === 'modal_dfc'){\r\n    return(\r\n      cardInfo.card_faces.map((value) => {\r\n        const image = value.image_uris ? value.image_uris : {}\r\n        return(\r\n          <div className=\"searchResultContainer\">\r\n            {CreateCardLayout(value)}\r\n            <div id=\"cardImage\"><img src={image.small}></img></div>\r\n          </div>\r\n        )\r\n      })\r\n    )\r\n  } else if(cardInfo.layout === 'split'){\r\n    const image = cardInfo.image_uris ? cardInfo.image_uris : {}\r\n    return(\r\n      <div className=\"searchResultContainer\">\r\n        {cardInfo.card_faces.map(CreateCardLayout)}\r\n        <div id=\"cardImage\"><img src={image.small}></img></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst CreateCardLayout = (cardInfo) => {\r\n  return(\r\n    <div className=\"cardContainer\">\r\n      <div className=\"item_title\">日本語名</div><div className=\"card_item\">{cardInfo.printed_name}</div>\r\n      <div className=\"item_title\">英語名</div><div className =\"card_item\">{cardInfo.name}</div>\r\n      <div className=\"item_title\">固有色</div><div className=\"card_item\">{cardInfo.color_identity}</div>\r\n      <div className=\"item_title\">テキスト</div><div className=\"card_item\">{cardInfo.printed_text}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport './Header.css'\r\n\r\nfunction Header(){\r\n    return(\r\n        <h1>EDH用検索ツール</h1>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport './App.css'\nimport Main from \"./Main/Main\";\nimport Header from \"./Header\";\n\nconst API = 'https://api.scryfall.com/cards/search?q=lang:ja+name='\n\nfunction App(){\n  return(\n    <div className=\"container\">\n      <div className=\"header\"><Header /></div>\n      <div className=\"main\"><Main /></div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App.js\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}