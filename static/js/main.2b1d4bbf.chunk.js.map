{"version":3,"sources":["Main/GetCardList.js","Main/ShowCardInfo/CreateCardLayout.js","Main/ShowCardInfo/ShowSplitCardInfo.js","Main/ShowCardInfo/ShowCardInfo.js","Main/Main.js","Header.js","App.js","index.js"],"names":["GetCardList","searchCondition","Promise","resolve","cardList","oracleIdSet","Set","SearchURL","cardName","idColor","fetch","then","res","json","data","Object","keys","map","key","forEach","cardInfo","add","oracle_id","has","push","CardName","printed_name","name","CardText","printed_text","oracle_text","CreateCardLayout","className","color_identity","ShowSplitCardInfo","image","image_uris","cardLayout","card_faces","id","src","small","ShowCardInfo","layout","value","InputSearchConditions","props","type","searchWord","onChange","e","handleCardNameChange","handleIdColorChange","Main","useState","setCardList","searchConditions","setSearchConditions","timeoutId","setTimeoutId","useEffect","clearTimeout","setTimeout","target","checked","toString","replace","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b1d4bbf.chunk.js","sourcesContent":["const API = 'https://api.scryfall.com/cards/search?q='\r\n\r\nconst GetCardList = (searchCondition) => {\r\n  return new Promise(function(resolve){\r\n      let cardList = [];\r\n      let oracleIdSet = new Set();\r\n\r\n      let SearchURL = 'https://api.scryfall.com/cards/search?q='\r\n\r\n      if(searchCondition.cardName) SearchURL += ('+name:' + searchCondition.cardName);\r\n      if(searchCondition.idColor) SearchURL += ('+id>=' + searchCondition.idColor);\r\n\r\n      if(SearchURL === API) resolve(cardList)\r\n      \r\n      //日本語のリストを先に取得\r\n      fetch(SearchURL + '+lang:ja')\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        if(json.data) cardList = Object.keys(json.data).map(function (key) {return json.data[key]});\r\n        cardList.forEach(cardInfo => oracleIdSet.add(cardInfo.oracle_id))\r\n      })\r\n      .then(() => {\r\n\r\n        //英語のリストを取得し日本語のリストに追加\r\n        fetch(SearchURL)\r\n        .then(res => res.json())\r\n        .then(json => json.data)\r\n        .then(data => {\r\n          if(data) data.forEach(\r\n            cardInfo => {\r\n              if(!oracleIdSet.has(cardInfo.oracle_id)) cardList.push(cardInfo)\r\n            })\r\n        })\r\n        .then(() => resolve(cardList) )\r\n      })\r\n  })\r\n}\r\n\r\n\r\nexport default GetCardList;","const CreateCardLayout = (cardInfo) => {\r\n    return(\r\n      <div className=\"cardContainer\">\r\n        <div className=\"item_title\">カード名</div><div className=\"card_item\">{CardName(cardInfo)}</div>\r\n        <div className=\"item_title\">固有色</div><div className=\"card_item\">{cardInfo.color_identity}</div>\r\n        <div className=\"item_title\">テキスト</div><div className=\"card_item\">{CardText(cardInfo)}</div>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst CardName = (cardInfo) => {\r\n    let cardName\r\n\r\n    if(cardInfo.printed_name){\r\n        return <div>{cardInfo.printed_name} // {cardInfo.name}</div>\r\n    }else{\r\n        return <div>{cardInfo.name}</div>\r\n    }\r\n}\r\n\r\nconst CardText = (cardInfo) => {\r\n    if(cardInfo.printed_text){\r\n        return <div>{cardInfo.printed_text}</div>\r\n    } else {\r\n        return <div>{cardInfo.oracle_text}</div>\r\n    }\r\n}\r\n\r\nexport default CreateCardLayout;","import './splitContainer.css';\r\nimport CreateCardLayout from './CreateCardLayout'\r\n\r\nconst ShowSplitCardInfo = (cardInfo) => {\r\n  const image = cardInfo.image_uris ? cardInfo.image_uris : {}\r\n  const cardLayout = cardInfo.card_faces.map(CreateCardLayout)\r\n  \r\n  return(\r\n    <div className=\"searchResultContainer\">\r\n      <div className=\"splitContainer\">\r\n        <div className=\"splitCardLayout\">\r\n          {cardLayout[0]}\r\n        </div>\r\n        <div className=\"splitCardLayout\">\r\n          {cardLayout[1]}\r\n        </div>\r\n      </div>\r\n      <div id=\"cardImage\"><img src={image.small}></img></div>\r\n    </div>\r\n  )\r\n}\r\n  \r\nexport default ShowSplitCardInfo;","import CreateCardLayout from './CreateCardLayout'\r\nimport ShowSplitCardInfo from './ShowSplitCardInfo';\r\n\r\nconst ShowCardInfo = (cardInfo) => {\r\n    if(cardInfo.layout === 'normal'){\r\n      const image = cardInfo.image_uris ? cardInfo.image_uris : {}\r\n      return(\r\n        <div className=\"searchResultContainer\">\r\n          {CreateCardLayout(cardInfo)}\r\n          <div id=\"cardImage\"><img src={image.small}></img></div>\r\n        </div>\r\n      )\r\n    }else if(cardInfo.layout === 'transform' || cardInfo.layout === 'modal_dfc'){\r\n      return(\r\n        cardInfo.card_faces.map((value) => {\r\n          const image = value.image_uris ? value.image_uris : {}\r\n          return(\r\n            <div className=\"searchResultContainer\">\r\n              {CreateCardLayout(value)}\r\n              <div id=\"cardImage\"><img src={image.small}></img></div>\r\n            </div>\r\n          )\r\n        })\r\n      )\r\n    } else if(cardInfo.layout === 'split'){\r\n      return(\r\n        <div>\r\n          {ShowSplitCardInfo(cardInfo)}\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default ShowCardInfo;","import './Main.css';\r\nimport React, { useState,useEffect,useRef } from 'react';\r\nimport GetCardList from './GetCardList'\r\nimport ShowCardInfo from './ShowCardInfo/ShowCardInfo'\r\n\r\nfunction Main(){\r\n  const [cardList, setCardList] = useState([])\r\n  const [searchConditions, setSearchConditions] = useState({\"idColor\":\"\"})\r\n  const [timeoutId, setTimeoutId] = useState(0)\r\n  \r\n  useEffect(() => {\r\n    clearTimeout(timeoutId)\r\n    setTimeoutId(setTimeout(() => {\r\n      GetCardList(searchConditions)\r\n      .then(cardList => {\r\n        cardList ? setCardList(cardList.map(cardInfo => ShowCardInfo(cardInfo))) : setCardList([])\r\n      })\r\n    }, 500)\r\n    )\r\n  },[searchConditions])\r\n\r\n  function handleCardNameChange(e){\r\n    setSearchConditions({...searchConditions, \"cardName\":e.target.value})\r\n  }\r\n\r\n  const handleIdColorChange = (e) => {\r\n    let idColor = searchConditions.idColor;\r\n    if(e.target.checked) idColor += e.target.value\r\n    else idColor = idColor.toString().replace(e.target.value, \"\")\r\n    setSearchConditions({...searchConditions, \"idColor\":idColor})\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <InputSearchConditions searchWord={searchConditions.cardName} \r\n        handleCardNameChange={e => handleCardNameChange(e)}\r\n        handleIdColorChange={e => handleIdColorChange(e)} \r\n      />\r\n      <div>\r\n        {cardList}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst InputSearchConditions = (props) => {\r\n  return(\r\n    <div>\r\n      <div>カード名　<input type=\"search\" value={props.searchWord} onChange={e => props.handleCardNameChange(e)} /></div>\r\n      <div>\r\n        固有色　　\r\n        <input type=\"checkbox\" name=\"idColor\" value=\"W\" onChange={e => props.handleIdColorChange(e)}></input>白\r\n        <input type=\"checkbox\" name=\"idColor\" value=\"U\" onChange={e => props.handleIdColorChange(e)}></input>青\r\n        <input type=\"checkbox\" name=\"idColor\" value=\"B\" onChange={e => props.handleIdColorChange(e)}></input>黒\r\n        <input type=\"checkbox\" name=\"idColor\" value=\"R\" onChange={e => props.handleIdColorChange(e)}></input>赤\r\n        <input type=\"checkbox\" name=\"idColor\" value=\"G\" onChange={e => props.handleIdColorChange(e)}></input>緑\r\n        <input type=\"checkbox\" name=\"idColor\" value=\"C\" onChange={e => props.handleIdColorChange(e)}></input>無色\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport './Header.css'\r\n\r\nfunction Header(){\r\n    return(\r\n        <h1>EDH用検索ツール</h1>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport './App.css'\nimport Main from \"./Main/Main\";\nimport Header from \"./Header\";\n\nconst API = 'https://api.scryfall.com/cards/search?q=lang:ja+name='\n\nfunction App(){\n  return(\n    <div className=\"container\">\n      <div className=\"header\"><Header /></div>\n      <div className=\"main\"><Main /></div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App.js\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}