{"version":3,"sources":["Main/GetCardList.js","Main/CreateCardLayout.js","Main/Main.js","Header.js","App.js","index.js"],"names":["GetCardList","searchCondition","Promise","resolve","cardList","oracleIdSet","Set","SearchURL","cardName","idColor","fetch","then","res","json","data","Object","keys","map","key","forEach","cardInfo","add","oracle_id","has","push","CardName","printed_name","name","CardText","printed_text","oracle_text","CreateCardLayout","className","color_identity","InputSearchConditions","props","type","value","searchWord","onChange","e","handleCardNameChange","handleIdColorChange","Main","useState","setCardList","searchConditions","setSearchConditions","useEffect","timeoutId","setTimeout","layout","image","image_uris","id","src","small","card_faces","ShowCardInfo","clearTimeout","target","checked","toString","replace","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2ee6ee2.chunk.js","sourcesContent":["const API = 'https://api.scryfall.com/cards/search?q='\r\n\r\nconst GetCardList = (searchCondition) => {\r\n  return new Promise(function(resolve){\r\n      let cardList = [];\r\n      let oracleIdSet = new Set();\r\n\r\n      let SearchURL = 'https://api.scryfall.com/cards/search?q='\r\n\r\n      if(searchCondition.cardName) SearchURL += ('+name:' + searchCondition.cardName);\r\n      if(searchCondition.idColor) SearchURL += ('+id>=' + searchCondition.idColor);\r\n\r\n      if(SearchURL === API) resolve(cardList)\r\n      \r\n      //日本語のリストを先に取得\r\n      fetch(SearchURL + '+lang:ja')\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        if(json.data) cardList = Object.keys(json.data).map(function (key) {return json.data[key]});\r\n        cardList.forEach(cardInfo => oracleIdSet.add(cardInfo.oracle_id))\r\n      })\r\n      .then(() => {\r\n\r\n        //英語のリストを取得し日本語のリストに追加\r\n        fetch(SearchURL)\r\n        .then(res => res.json())\r\n        .then(json => json.data)\r\n        .then(data => {\r\n          if(data) data.forEach(\r\n            cardInfo => {\r\n              if(!oracleIdSet.has(cardInfo.oracle_id)) cardList.push(cardInfo)\r\n            })\r\n        })\r\n        .then(() => resolve(cardList) )\r\n      })\r\n  })\r\n}\r\n\r\n\r\nexport default GetCardList;","const CreateCardLayout = (cardInfo) => {\r\n    return(\r\n      <div className=\"cardContainer\">\r\n        <div className=\"item_title\">カード名</div><div className=\"card_item\">{CardName(cardInfo)}</div>\r\n        <div className=\"item_title\">固有色</div><div className=\"card_item\">{cardInfo.color_identity}</div>\r\n        <div className=\"item_title\">テキスト</div><div className=\"card_item\">{CardText(cardInfo)}</div>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst CardName = (cardInfo) => {\r\n    let cardName\r\n\r\n    if(cardInfo.printed_name){\r\n        return <div>{cardInfo.printed_name} // {cardInfo.name}</div>\r\n    }else{\r\n        return <div>{cardInfo.name}</div>\r\n    }\r\n}\r\n\r\nconst CardText = (cardInfo) => {\r\n    if(cardInfo.printed_text){\r\n        return <div>{cardInfo.printed_text}</div>\r\n    } else {\r\n        return <div>{cardInfo.oracle_text}</div>\r\n    }\r\n}\r\n\r\nexport default CreateCardLayout;","import './Main.css';\r\nimport React, { useState,useEffect } from 'react';\r\nimport GetCardList from './GetCardList'\r\nimport CreateCardLayout from './CreateCardLayout'\r\n\r\nfunction Main(){\r\n  const[cardList, setCardList] = useState([]);\r\n  const[searchConditions, setSearchConditions] = useState({\"idColor\":\"\"})\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      GetCardList(searchConditions)\r\n      .then(cardList => {\r\n        cardList ? setCardList(cardList.map(cardInfo => ShowCardInfo(cardInfo))) : setCardList([])\r\n      })\r\n    }, 500);\r\n    return () => {\r\n      clearTimeout(timeoutId)\r\n    }\r\n  },[searchConditions])\r\n\r\n  function handleCardNameChange(e){\r\n    setSearchConditions({...searchConditions, \"cardName\":e.target.value})\r\n  }\r\n\r\n  const handleIdColorChange = (e) => {\r\n    let idColor = searchConditions.idColor;\r\n    if(e.target.checked) idColor += e.target.value\r\n    else idColor = idColor.toString().replace(e.target.value, \"\")\r\n    setSearchConditions({...searchConditions, \"idColor\":idColor})\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <InputSearchConditions searchWord={searchConditions.cardName} \r\n        handleCardNameChange={e => handleCardNameChange(e)}\r\n        handleIdColorChange={e => handleIdColorChange(e)} \r\n      />\r\n      <div>\r\n        {cardList}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst InputSearchConditions = (props) => {\r\n  return(\r\n    <div>\r\n      <div>カード名　<input type=\"search\" value={props.searchWord} onChange={e => props.handleCardNameChange(e)} /></div>\r\n      <div>\r\n        固有色　　\r\n        <input type=\"checkbox\" name=\"idColor\" value=\"W\" onChange={e => props.handleIdColorChange(e)}></input>白\r\n        <input type=\"checkbox\" name=\"idColor\" value=\"U\" onChange={e => props.handleIdColorChange(e)}></input>青\r\n        <input type=\"checkbox\" name=\"idColor\" value=\"B\" onChange={e => props.handleIdColorChange(e)}></input>黒\r\n        <input type=\"checkbox\" name=\"idColor\" value=\"R\" onChange={e => props.handleIdColorChange(e)}></input>赤\r\n        <input type=\"checkbox\" name=\"idColor\" value=\"G\" onChange={e => props.handleIdColorChange(e)}></input>緑\r\n        <input type=\"checkbox\" name=\"idColor\" value=\"C\" onChange={e => props.handleIdColorChange(e)}></input>無色\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ShowCardInfo(cardInfo){\r\n  if(cardInfo.layout === 'normal'){\r\n    const image = cardInfo.image_uris ? cardInfo.image_uris : {}\r\n    return(\r\n      <div className=\"searchResultContainer\">\r\n        {CreateCardLayout(cardInfo)}\r\n        <div id=\"cardImage\"><img src={image.small}></img></div>\r\n      </div>\r\n    )\r\n  }else if(cardInfo.layout === 'transform' || cardInfo.layout === 'modal_dfc'){\r\n    return(\r\n      cardInfo.card_faces.map((value) => {\r\n        const image = value.image_uris ? value.image_uris : {}\r\n        return(\r\n          <div className=\"searchResultContainer\">\r\n            {CreateCardLayout(value)}\r\n            <div id=\"cardImage\"><img src={image.small}></img></div>\r\n          </div>\r\n        )\r\n      })\r\n    )\r\n  } else if(cardInfo.layout === 'split'){\r\n    const image = cardInfo.image_uris ? cardInfo.image_uris : {}\r\n    return(\r\n      <div className=\"searchResultContainer\">\r\n        {cardInfo.card_faces.map(CreateCardLayout)}\r\n        <div id=\"cardImage\"><img src={image.small}></img></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport './Header.css'\r\n\r\nfunction Header(){\r\n    return(\r\n        <h1>EDH用検索ツール</h1>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport './App.css'\nimport Main from \"./Main/Main\";\nimport Header from \"./Header\";\n\nconst API = 'https://api.scryfall.com/cards/search?q=lang:ja+name='\n\nfunction App(){\n  return(\n    <div className=\"container\">\n      <div className=\"header\"><Header /></div>\n      <div className=\"main\"><Main /></div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App.js\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}